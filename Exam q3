3)  Consider the code for the Link, Stack and Queue classes.  Note Stack and Queue are not complete.

---------------------------------------------------------------
public class Link{
  Object thing;
  Link next;
}
---------------------------------------------------------------


----------------------------------------------------------------
public class Stack{
  Link head;
  int length=0;
  
  public Stack(Link first){
    head=first;
    length=1;}
  
  public void push(Link newlink){
    newlink.next=head;
    head=newlink;
    length=length+1;}
    
   public Link peek(Link newlink){
    return head;}
    
  .......
  
--------------------------------------------------------------
  
----------------------------------------------------------------
public class Queue{
  Link head;
  int length=0;
 
  public Queue(Link first){
    head=first;
    length=1;} 
    
  public void add(Link newlink){
    newlink.next=head;
    head=newlink;
    length=length+1;}
    
  .......
  
--------------------------------------------------------------

a)  Explain what a Stack is.  Specify if it is LIFO or FIFO.
  
  Stack is actually a stacking system which stack the data from the bottom to the top. It develop in vertical way
  like a tower. It includes Link, Head, and Next. It is LIFO.

b)  Complete the Stack class by writing the "pop" method.
  
  public Link pop(){
    length = length - 1;
    Link temp = head;
    this.head = this.head.next;
    return temp;}
      
c)  Explain what a Queue is.  Specify if it is LIFO or FIFO.
  
  Queue is like a series of data. It develop in the horizontal direction like a series of number. It includes Link,
  Head, and Next. It is FIFO.

d)  Complete the Queue class by writing the "peek" and "remove" methods.
  
  public Link peek{
    Link temp = head;
    for(int i=1, i<length, i++){
      temp = temp.next;}
    return temp:}
    
  public remove(){
  Link temp = this.peel();
  length = length -1;
  return temp;}
    
